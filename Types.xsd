<xs:schema targetNamespace="http://schemas.ollon.us/types"
           xmlns="http://schemas.ollon.us/types"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">


    <xs:simpleType name="PublicKeyTokenType">
        <xs:restriction base="xs:string">
            <xs:pattern value="([0-9]|[a-f]|[A-F]){16}" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Guid">
        <xs:restriction base="xs:string">
            <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SimpleIdentifier">
        <xs:annotation>
            <xs:documentation>

                The below pattern represents the allowed identifiers in ECMA specification:

                [\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}


            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="QualifiedName">
        <xs:annotation>
            <xs:documentation>The below pattern represents the allowed identifiers in ECMA specification plus the '.' for namespace qualification</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}(\.[\p{L}\p{Nl}][\p{L}\p{Nl}\p{Nd}\p{Mn}\p{Mc}\p{Pc}\p{Cf}]{0,}){0,}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="NonEmptyString">
        <xs:annotation>
            <xs:documentation>Non-empty string must have a non-whitespace character at the beginning and end</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="32767"/>
            <xs:pattern value="[^\s]|([^\s].*[^\s])"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="IpAddressType">
        <xs:restriction base="xs:token">
            <xs:pattern value="(([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])" />
            <xs:pattern value="([0-9a-fA-F]{1,4}:){7}([0-9a-fA-F]{1,4})" />
        </xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="MacAddress">
        <xs:restriction base="xs:token">
            <xs:pattern value="([0-9a-fA-F]{1,2}-){7}([0-9a-fA-F]{1,2})" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="TwoPartVersionType">
        <xs:restriction base="xs:string">
            <xs:pattern value="(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])\.(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])$"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ThreePartVersionType">
        <xs:restriction base="xs:string">
            <xs:pattern value="(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])\.(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])\.(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])$"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="FourPartVersionType">
        <xs:restriction base="xs:string">
            <xs:pattern value="(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])\.(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])\.(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])\.(0*[0-9]{0,4}|0*[1-5][0-9]{4}|0*6[0-4][0-9]{3}|0*65[0-4][0-9]{2}|0*655[0-2][0-9]|0*6553[0-5])$"/>
        </xs:restriction>
    </xs:simpleType>
    
</xs:schema>